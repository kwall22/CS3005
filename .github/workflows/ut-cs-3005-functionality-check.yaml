name: ut-cs-3005-functionality-check
on: [push]
jobs:

##########################################################################

  pull-code:
    name: Pull source code
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        
##########################################################################

  hello-enabled:
    name: Hello enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: hello
      ASSIGNMENT: hello
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  hello-check:
    name: Hello
    runs-on: self-hosted
    needs: [hello-enabled]
    continue-on-error: false
    if: ${{ needs.hello-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: hello
      ASSIGNMENT: hello
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
##########################################################################

  questions-3-enabled:
    name: Questions 3 enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: questions_3
      ASSIGNMENT: questions_3
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  questions-3-check:
    name: Questions 3
    runs-on: self-hosted
    needs: [questions-3-enabled]
    continue-on-error: false
    if: ${{ needs.questions-3-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: questions_3
      ASSIGNMENT: questions_3
      ASSIGNMENT_NUMBER: 1
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
  questions-3-unit-tests-enabled:
    name: Questions 3 unit tests enabled?
    runs-on: self-hosted
    needs: [questions-3-enabled]
    continue-on-error: true
    if: ${{ needs.questions-3-enabled.outputs.output1 == 'success' }}
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: questions_3_unit_tests
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  questions-3-unit-tests:
    name: Questions 3 Unit Tests
    runs-on: self-hosted
    needs: [questions-3-unit-tests-enabled]
    continue-on-error: false
    if: ${{ needs.questions-3-unit-tests-enabled.outputs.output1 == 'success' }}
    env:
      ASSIGNMENT_NUMBER: 1
    steps:
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
        
##########################################################################

  ascii-image-enabled:
    name: ASCII Image enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ascii_image
      ASSIGNMENT: ascii_image
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  ascii-image-check:
    name: ASCII Image
    runs-on: self-hosted
    needs: [ascii-image-enabled]
    continue-on-error: false
    if: ${{ needs.ascii-image-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ascii_image
      ASSIGNMENT: ascii_image
      ASSIGNMENT_NUMBER: 2
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose

  ascii-image-unit-tests-enabled:
    name: ASCII Image unit tests enabled?
    runs-on: self-hosted
    needs: [ascii-image-enabled]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: ascii_image_unit_tests
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  ascii-image-unit-tests:
    name: ASCII Image Unit Tests
    runs-on: self-hosted
    needs: [ascii-image-unit-tests-enabled]
    continue-on-error: false
    if: ${{ needs.ascii-image-unit-tests-enabled.outputs.output1 == 'success' }}
    env:
      ASSIGNMENT_NUMBER: 2
    steps:
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose

##########################################################################        
        
  image-file-enabled:
    name: Image File enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: image_file
      ASSIGNMENT: image_file
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  image-file-check:
    name: Image File
    runs-on: self-hosted
    needs: [image-file-enabled]
    continue-on-error: false
    if: ${{ needs.image-file-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: image_file
      ASSIGNMENT: image_file
      ASSIGNMENT_NUMBER: 3
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
  image-file-unit-tests-enabled:
    name: Image File unit tests enabled?
    runs-on: self-hosted
    needs: [image-file-enabled]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: image_file_unit_tests
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  image-file-unit-tests:
    name: Image File Unit Tests
    runs-on: self-hosted
    needs: [image-file-unit-tests-enabled]
    continue-on-error: false
    if: ${{ needs.image-file-unit-tests-enabled.outputs.output1 == 'success' }}
    env:
      ASSIGNMENT_NUMBER: 3
    steps:
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
        
##########################################################################        
        
  action-data-menu-data-enabled:
    name: ActionData/MenuData enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: action_data_menu_data_unit_tests
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  action-data-menu-data-check:
    name: ActionData, MenuData, PPM::readStream
    runs-on: self-hosted
    needs: [action-data-menu-data-enabled]
    continue-on-error: false
    if: ${{ needs.action-data-menu-data-enabled.outputs.output1 == 'success' }}
    env:
      ASSIGNMENT_NUMBER: 4
    steps:
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
        
##########################################################################        

  ppm-menu-enabled:
    name: PPM Menu enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: ppm_menu
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  ppm-menu-check:
    name: PPM Menu
    runs-on: self-hosted
    needs: [ppm-menu-enabled]
    continue-on-error: false
    if: ${{ needs.ppm-menu-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: ppm_menu
      ASSIGNMENT_NUMBER: 5
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  ppm-operators-enabled:
    name: PPM Operators enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: operator
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  ppm-operators-check:
    name: PPM Operators
    runs-on: self-hosted
    needs: [ppm-operators-enabled]
    continue-on-error: false
    if: ${{ needs.ppm-operators-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: operator
      ASSIGNMENT_NUMBER: 6
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  image-filters-enabled:
    name: Image Filters enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: gray-draw
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  image-filters-check:
    name: Image Filters/Drawing
    runs-on: self-hosted
    needs: [image-filters-enabled]
    continue-on-error: false
    if: ${{ needs.image-filters-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: gray-draw
      ASSIGNMENT_NUMBER: 7
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  number-grid-enabled:
    name: Number Grid enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: number-grid
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  number-grid-check:
    name: Number Grid
    runs-on: self-hosted
    needs: [number-grid-enabled]
    continue-on-error: false
    if: ${{ needs.number-grid-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: number-grid
      ASSIGNMENT_NUMBER: 8
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  color-table-enabled:
    name: Color Table enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: colortable
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  color-table-check:
    name: Color Table
    runs-on: self-hosted
    needs: [color-table-enabled]
    continue-on-error: false
    if: ${{ needs.color-table-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: colortable
      ASSIGNMENT_NUMBER: 9
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  complex-fractal-enabled:
    name: Complex Fractal enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: complex-fractal
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  complex-fractal-check:
    name: Complex Fractal
    runs-on: self-hosted
    needs: [complex-fractal-enabled]
    continue-on-error: false
    if: ${{ needs.complex-fractal-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: complex-fractal
      ASSIGNMENT_NUMBER: 10
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  julia-set-enabled:
    name: Julia Set enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: julia-set
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  julia-set-check:
    name: Julia Set
    runs-on: self-hosted
    needs: [julia-set-enabled]
    continue-on-error: false
    if: ${{ needs.julia-set-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: julia-set
      ASSIGNMENT_NUMBER: 11
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  mandelbrot-set-enabled:
    name: Mandelbrot Set enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: mandelbrot-set
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  mandelbrot-set-check:
    name: Mandelbrot Set
    runs-on: self-hosted
    needs: [mandelbrot-set-enabled]
    continue-on-error: false
    if: ${{ needs.mandelbrot-set-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: mandelbrot-set
      ASSIGNMENT_NUMBER: 12
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  threaded-grid-enabled:
    name: Threaded Grid enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: threadedgrid
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  threaded-grid-check:
    name: Threaded Grid
    runs-on: self-hosted
    needs: [threaded-grid-enabled]
    continue-on-error: false
    if: ${{ needs.threaded-grid-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: threadedgrid
      ASSIGNMENT_NUMBER: 13
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 60
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
